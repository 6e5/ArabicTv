{"version":3,"sources":["components/Scroll.js","components/ChannelListItem.js","components/ChannelList.js","components/Player.js","components/ChannelInfo.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Scroll","_ref","children","react_default","a","createElement","style","overflowY","height","ChannelListItem","channel","onChannelChange","className","onClick","key","name","ChannelList","channels","status","components_Scroll","map","components_ChannelListItem","id","Player","_this$props","this","props","url","width","player_bundle_default","autoplay","PureComponent","ChannelInfo","toUpperCase","components_Player","controls","playing","Header","onChannelsToggle","onInputChange","onChange","e","type","placeholder","aria-label","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","current","console","log","showChannels","state","search","target","value","url2","_this$state","filteredChannels","filter","toLowerCase","includes","components_Header","components_ChannelList","components_ChannelInfo","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yNAMeA,SAJA,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAChB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,UAAYN,KCajDO,EAdS,SAAAR,GAAkC,IAA/BS,EAA+BT,EAA/BS,QAASC,EAAsBV,EAAtBU,gBAClC,OAAOD,EACLP,EAAAC,EAAAC,cAAA,MACEO,UAAU,yCACVC,QAAS,kBAAMF,EAAgBD,IAC/BI,IAAKJ,EAAQK,MAEbZ,EAAAC,EAAAC,cAAA,UAAKK,EAAQK,OAGfZ,EAAAC,EAAAC,cAAA,6CCgBWW,EAxBK,SAAAf,GAA2C,IAAxCU,EAAwCV,EAAxCU,gBAAiBM,EAAuBhB,EAAvBgB,SACtC,OAD6DhB,EAAbiB,OAE9Cf,EAAAC,EAAAC,cAAA,OAAKO,UAAU,2BACbT,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAAA,MAAIO,UAAU,cACXK,EACCA,EAASG,IAAI,SAAAV,GACX,OACEP,EAAAC,EAAAC,cAACgB,EAAD,CACEP,IAAKJ,EAAQY,GACbZ,QAASA,EACTC,gBAAiBA,MAKvBR,EAAAC,EAAAC,cAAA,8CAKN,sBCdSkB,mLANJ,IAAAC,EACwBC,KAAKC,MAA5BC,EADDH,EACCG,IAAKC,EADNJ,EACMI,MAAOpB,EADbgB,EACahB,OACpB,OAAOL,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAU0B,UAAQ,EAACF,MAAOA,EAAOpB,OAAQA,EAAQmB,IAAKA,WAH5CI,iBCyBNC,EA1BK,SAAA/B,GAAiB,IAAdS,EAAcT,EAAdS,QACrB,OAAOA,EACLP,EAAAC,EAAAC,cAAA,OAAKO,UAAU,yBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,eACZF,EAAQK,KAAKkB,cAAgB,YAEhC9B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAC6B,EAAD,CACEP,IAAKjB,EAAQiB,IACbnB,OAAQ,QACRoB,MAAM,QACNO,UAAQ,EACRC,SAAO,MAKbjC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBACbT,EAAAC,EAAAC,cAAA,oCAEEF,EAAAC,EAAAC,cAAA,WAFF,4BCASgC,EAnBA,SAAApC,GAAiDA,EAA9CqC,iBAA8CrC,EAA5BiB,OAA4B,IAApBqB,EAAoBtC,EAApBsC,cAC1C,OACEpC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gCACbT,EAAAC,EAAAC,cAAA,QAAMO,UAAU,eACdT,EAAAC,EAAAC,cAAA,SACEmC,SAAU,SAAAC,GAAC,OAAIF,EAAcE,IAC7B7B,UAAU,uBACV8B,KAAK,SACLC,YAAY,SACZC,aAAW,WAEbzC,EAAAC,EAAAC,cAAA,UAAQO,UAAU,uCAAuC8B,KAAK,UAA9D,aC2GOG,cA9Gb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAoB,IACZC,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA1B,QAyEFd,gBAAkB,SAAAD,GAChBoC,EAAKM,SAAS,CAAEC,QAAS3C,IACzB4C,QAAQC,IAAI7C,IA5EAoC,EA8EdR,iBAAmB,SAAApB,GACjB4B,EAAKM,SAAS,CAAEI,aAActC,IAC9BoC,QAAQC,IAAIT,EAAKW,MAAMD,eAhFXV,EAkFdP,cAAgB,SAAAE,GACdK,EAAKM,SAAS,CAAEM,OAAQjB,EAAEkB,OAAOC,SAjFjCd,EAAKW,MAAQ,CACXxC,SAAU,CACR,CACEK,GAAI,EACJP,KAAM,iBACNY,IAAK,2DAEP,CACEL,GAAI,EACJP,KAAM,oBACNY,IAAK,4DAEP,CACEL,GAAI,EACJP,KAAM,gBACNY,IAAK,2DAEP,CACEL,GAAI,EACJP,KAAM,gBACNY,IACE,wEAEJ,CACEL,GAAI,EACJP,KAAM,gBACNY,IAAK,kDAEP,CACEL,GAAI,EACJP,KAAM,kBACNY,IAAK,kDAEP,CACEL,GAAI,EACJP,KAAM,mBACNY,IAAK,0DACLkC,KACE,wEAEJ,CACEvC,GAAI,EACJP,KAAM,sBACNY,IAAK,gEAEP,CACEL,GAAI,EACJP,KAAM,kBACNY,IAAK,kDAEP,CACEL,GAAI,GACJP,KAAM,oBACNY,IACE,wEAEJ,CACEL,GAAI,GACJP,KAAM,oBACNY,IAAK,kDAEP,CACEL,GAAI,GACJP,KAAM,qBACNY,IAAK,oDAGT0B,QAAS,KACTG,cAAc,EACdE,OAAQ,IAvEEZ,wEAqFL,IAAAgB,EACsBrC,KAAKgC,MAA1BxC,EADD6C,EACC7C,SAAUyC,EADXI,EACWJ,OACZK,EAAmB9C,EAAS+C,OAAO,SAAAtD,GACvC,OAAOA,EAAQK,KAAKkD,cAAcC,SAASR,EAAOO,iBAEpD,OACE9D,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAC8D,EAAD,CACE5B,cAAed,KAAKc,cACpBrB,OAAQO,KAAKgC,MAAMD,aACnBlB,iBAAkBb,KAAKa,mBAEzBnC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBACbT,EAAAC,EAAAC,cAAC+D,EAAD,CACElD,OAAQO,KAAKgC,MAAMD,aACnBvC,SAAU8C,EACVpD,gBAAiBc,KAAKd,kBAExBR,EAAAC,EAAAC,cAACgE,EAAD,CAAa3D,QAASe,KAAKgC,MAAMJ,mBAxGzBiB,aCGZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7B,QACfuB,UAAUC,cAAcQ,YAI1BnC,QAAQC,IACN,iHAKEwB,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB9B,QAAQC,IAAI,sCAGRwB,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,UAO5BQ,MAAM,SAAAC,GACLvC,QAAQuC,MAAM,4CAA6CA,WCxFjEC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe,SDc1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,IAAwB3B,OAAOC,SAAS2B,MACpDC,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,GAAA0B,OAAMJ,IAAN,sBAEP7B,GAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,GACHK,KAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASxF,QACO,MAAfyF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7BV,OAAOC,SAASuC,aAKpBpC,EAAgBC,EAAOC,KAG1Ba,MAAM,WACLtC,QAAQC,IACN,mEArFA2D,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,KAAK,WACjC7B,QAAQC,IACN,gHAMJsB,EAAgBC,EAAOC,MCrC/BE","file":"static/js/main.8abe0fea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Scroll = ({ children }) => {\r\n  return <div style={{ overflowY: \"scroll\", height: \"800px\" }}>{children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React from \"react\";\r\n\r\nconst ChannelListItem = ({ channel, onChannelChange }) => {\r\n  return channel ? (\r\n    <li\r\n      className=\"list-group-item list-group-item-action\"\r\n      onClick={() => onChannelChange(channel)}\r\n      key={channel.name}\r\n    >\r\n      <h3>{channel.name}</h3>\r\n    </li>\r\n  ) : (\r\n    <h4>No channel Provided / Selected</h4>\r\n  );\r\n};\r\n\r\nexport default ChannelListItem;\r\n","import React from \"react\";\r\nimport Scroll from \"./Scroll\";\r\nimport ChannelListItem from \"./ChannelListItem\";\r\n\r\nconst ChannelList = ({ onChannelChange, channels, status }) => {\r\n  return status ? (\r\n    <div className=\"channels-list mr-3 mt-1\">\r\n      <Scroll>\r\n        <ul className=\"list-group\">\r\n          {channels ? (\r\n            channels.map(channel => {\r\n              return (\r\n                <ChannelListItem\r\n                  key={channel.id}\r\n                  channel={channel}\r\n                  onChannelChange={onChannelChange}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <h4>No Channels Provided to Parse</h4>\r\n          )}\r\n        </ul>\r\n      </Scroll>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default ChannelList;\r\n","import React, { PureComponent } from \"react\";\r\n// import ReactPlayer from \"react-player\";\r\nimport ReactHLS from \"react-hls\";\r\n\r\nclass Player extends PureComponent {\r\n  render() {\r\n    const { url, width, height } = this.props;\r\n    return <ReactHLS autoplay width={width} height={height} url={url} />;\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport Player from \"./Player\";\r\n\r\nconst ChannelInfo = ({ channel }) => {\r\n  return channel ? (\r\n    <div className=\"card text-center mt-1\">\r\n      <div className=\"card-header\">\r\n        {channel.name.toUpperCase() + \" CHANNEL\"}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <Player\r\n          url={channel.url}\r\n          height={\"640px\"}\r\n          width=\"350px\"\r\n          controls\r\n          playing\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"channel-info mt-1\">\r\n      <h4>\r\n        Please Select a Channel\r\n        <br /> to Start Streaming...\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChannelInfo;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ onChannelsToggle, status, onInputChange }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <form className=\"form-inline\">\r\n        <input\r\n          onChange={e => onInputChange(e)}\r\n          className=\"form-control mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n        />\r\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// Componennts\n\nimport ChannelList from \"./components/ChannelList\";\nimport ChannelInfo from \"./components/ChannelInfo\";\nimport Header from \"./components/Header\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      channels: [\n        {\n          id: 1,\n          name: \"AR: Yemen Aden\",\n          url: \"http://62.210.141.179:8000/live/ibrahim/123456/454.m3u8\"\n        },\n        {\n          id: 2,\n          name: \"AR: Yemen Al-Ghad\",\n          url: \"http://62.210.141.179:8000/live/ibrahim/123456/1191.m3u8\"\n        },\n        {\n          id: 3,\n          name: \"AR: Yemen TV1\",\n          url: \"http://62.210.141.179:8000/live/ibrahim/123456/455.m3u8\"\n        },\n        {\n          id: 4,\n          name: \"AR: Yemen TV2\",\n          url:\n            \"http://185.246.209.218:80/philbrousseau@hotmail.com/c6u4UIw55z/13757\"\n        },\n        {\n          id: 5,\n          name: \"AR: Yemen TV3\",\n          url: \"http://4ever.biz:80/live/wesam/wesam/3276.m3u8\"\n        },\n        {\n          id: 6,\n          name: \"AR: Yemen Today\",\n          url: \"http://4ever.biz:80/live/wesam/wesam/3274.m3u8\"\n        },\n        {\n          id: 7,\n          name: \"AR: Yemen Shabab\",\n          url: \"http://stream.starmenacdn.com:8080/hls/yemenshabab.m3u8\",\n          url2:\n            \"http://185.246.209.218:80/philbrousseau@hotmail.com/c6u4UIw55z/13758\"\n        },\n        {\n          id: 8,\n          name: \"AR: Yemen AlSaeedah\",\n          url: \"http://landiptv.live:8080/wchannelsottvip/93bfc2a43c11/75296\"\n        },\n        {\n          id: 9,\n          name: \"AR: Yemen Samaa\",\n          url: \"http://4ever.biz:80/live/wesam/wesam/3802.m3u8\"\n        },\n        {\n          id: 10,\n          name: \"AR: Yemen Samaa 2\",\n          url:\n            \"http://185.246.209.218:80/philbrousseau@hotmail.com/c6u4UIw55z/13805\"\n        },\n        {\n          id: 11,\n          name: \"AR: Yemen Belqees\",\n          url: \"http://4ever.biz:80/live/wesam/wesam/3679.m3u8\"\n        },\n        {\n          id: 12,\n          name: \"AR: Yemen Alhawyah\",\n          url: \"http://4ever.biz:80/live/wesam/wesam/23418.m3u8\"\n        }\n      ],\n      current: null,\n      showChannels: true,\n      search: \"\"\n    };\n  }\n  onChannelChange = channel => {\n    this.setState({ current: channel });\n    console.log(channel);\n  };\n  onChannelsToggle = status => {\n    this.setState({ showChannels: status });\n    console.log(this.state.showChannels);\n  };\n  onInputChange = e => {\n    this.setState({ search: e.target.value });\n  };\n  render() {\n    const { channels, search } = this.state;\n    const filteredChannels = channels.filter(channel => {\n      return channel.name.toLowerCase().includes(search.toLowerCase());\n    });\n    return (\n      <div className=\"container\">\n        <Header\n          onInputChange={this.onInputChange}\n          status={this.state.showChannels}\n          onChannelsToggle={this.onChannelsToggle}\n        />\n        <div className=\"container-content\">\n          <ChannelList\n            status={this.state.showChannels}\n            channels={filteredChannels}\n            onChannelChange={this.onChannelChange}\n          />\n          <ChannelInfo channel={this.state.current} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}